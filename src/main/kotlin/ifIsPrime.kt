/**
 * Программа выше определяет функцию isPrime, которая проверяет, является ли число простым, и функцию main, в которой
 * находится наибольшее простое число в заданном диапазоне (от 2 до 1000). В конечном итоге, переменная
 * greatestPrimeInRange будет содержать наибольшее простое число в указанном диапазоне.
 * */

// Функция isPrime принимает число типа Int и возвращает значение типа Boolean
fun checkIsPrime(number: Int): Boolean {
    // Итерируемся по числам от 2 до половины переданного числа (number / 2)
    for (i in 2..(number / 2)) {
        // Если число делится на текущее значение i без остатка (число не является простым), то переходим к следующей итерации
        if (number % i != 0)
            continue
        // Если число делится на текущее значение i с остатком (число является простым), то возвращаем false
        else
            return false
    }
    // Если ни одно деление не имело остатка, значит число простое, и функция возвращает true
    return true
}

// Функция main - точка входа в программу
fun main() {
    // Инициализация переменной greatestPrimeInRange значением 2 (первое простое число)
    var greatestPrimeInRange = 2
    // Итерируемся по числам от 2 до 1000
    for (number in 2..1000) {
        // Если число простое и больше текущего значения greatestPrimeInRange
        if (checkIsPrime(number) && number > greatestPrimeInRange)
        // Обновляем значение greatestPrimeInRange на текущее простое число
            greatestPrimeInRange = number
    }
}
